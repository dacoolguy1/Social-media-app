{
  "openapi": "3.0.3",
  "info": {
     "title": "My Social Media App",
     "description": "This is a simple social media app.",
     "version": "1.0.0"
  },
  "components": {
     "securitySchemes": {
        "BearerAuth": {
           "type": "http",
           "scheme": "bearer",
           "bearerFormat": "JWT"
        }
     }
  },
  "paths": {
     "/login": {
        "post": {
           "summary": "Login",
           "description": "This endpoint logs in a user.",
           "operationId": "routes.login",
           "requestBody": {
              "content": {
                 "application/json": {
                    "schema": {
                       "type": "object",
                       "properties": {
                          "email": {
                             "type": "string"
                          },
                          "password": {
                             "type": "string"
                          }
                       }
                    }
                 }
              }
           },
           "responses": {
              "200": {
                 "description": "The user was logged in successfully.",
                 "content": {
                    "application/json": {
                       "schema": {
                          "type": "object",
                          "properties": {
                             "user": {
                                "type": "object",
                                "properties": {
                                   "username": {
                                      "type": "string"
                                   },
                                   "email": {
                                      "type": "string"
                                   }
                                }
                             }
                          }
                       }
                    }
                 }
              },
              "401": {
                 "description": "The user's credentials were incorrect."
              }
           }
        }
     },
     "/register": {
        "post": {
           "summary": "Register",
           "description": "This endpoint registers a new user.",
           "operationId": "routes.register",
           "requestBody": {
              "content": {
                 "application/json": {
                    "schema": {
                       "type": "object",
                       "properties": {
                          "firstname": {
                             "type": "string"
                          },
                          "username": {
                             "type": "string"
                          },
                          "lastname": {
                             "type": "string"
                          },
                          "email": {
                             "type": "string"
                          },
                          "password": {
                             "type": "string"
                          }
                       }
                    }
                 }
              }
           },
           "responses": {
              "201": {
                 "description": "The user was registered successfully.",
                 "content": {
                    "application/json": {
                       "schema": {
                          "type": "object",
                          "properties": {
                             "user": {
                                "type": "object",
                                "properties": {
                                   "username": {
                                      "type": "string"
                                   },
                                   "email": {
                                      "type": "string"
                                   }
                                }
                             }
                          }
                       }
                    }
                 }
              },
              "400": {
                 "description": "The user's credentials were invalid."
              }
           }
        }
     },
     "/profile": {
        "post": {
           "summary": "Shows the User Profile",
           "description": "This endpoint shows a user Profile.",
           "operationId": "routes.profile",
           "security": [
              {
                 "BearerAuth": []
              }
           ],
           "requestBody": {
              "content": {
                 "application/json": {
                    "schema": {
                       "type": "object",
                       "properties": {
                          "email": {
                             "type": "string"
                          }
                       }
                    }
                 }
              }
           },
           "responses": {
              "201": {
                 "description": "The profile was gotten was successfully.",
                 "content": {
                    "application/json": {
                       "schema": {
                          "type": "object",
                          "properties": {
                             "user": {
                                "type": "object",
                                "properties": {
                                   "username": {
                                      "type": "string"
                                   },
                                   "email": {
                                      "type": "string"
                                   },
                                   "number_of_posts": {
                                      "type": "string"
                                   },
                                   "number_of_besties": {
                                      "type": "string"
                                   },
                                   "number_of_adores": {
                                      "type": "string"
                                   },
                                   "profile_description": {
                                      "type": "string"
                                   }
                                }
                             }
                          }
                       }
                    }
                 }
              },
              "400": {
                 "description": "We were unable to get the user Profile."
              }
           }
        }
     },
     "/editprofile": {
      "post": {
         "summary": "Edit the User Profile",
         "description": "This endpoint allows you to edit a user Profile.",
         "operationId": "routes.editprofile",
         "security": [
            {
               "BearerAuth": []
            }
         ],
         "requestBody": {
            "content": {
               "application/json": {
                  "schema": {
                     "type": "object",
                     "properties": {
                         "username": {
                           "type": "string"
                        },
                        "bio": {
                           "type": "string"
                        }
                    
                     }
                  }
               }
            }
         },
         "responses": {
            "201": {
               "description": "The profile was updated successfully.",
               "content": {
                  "application/json": {
                     "schema": {
                        "type": "object",
                        "properties": {
                           "user": {
                              "type": "object",
                              "properties": {
                                 "username": {
                                    "type": "string"
                                 },
                                 "email": {
                                    "type": "string"
                                 },
                                 "number_of_posts": {
                                    "type": "string"
                                 },
                                 "number_of_besties": {
                                    "type": "string"
                                 },
                                 "number_of_adores": {
                                    "type": "string"
                                 },
                                 "profile_description": {
                                    "type": "string"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "400": {
               "description": "We were unable to update the user Profile."
            }
         }
      }
   },
   "/createpost": {
      "post": {
        "summary": "Create a Post",
        "description": "This endpoint allows a user to create a new post.",
        "operationId": "routes.createpost",
        "security": [
          { "BearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "post_description": { "type": "string" },
                  "post_created_time": { "type": "string", "format": "date-time" },
                  "post_images": {
                    "type": "array",
                    "items": { "type": "string", "format": "uri" }
                  },
                  "post_comments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "comment_text": { "type": "string" },
                        "comment_time": { "type": "string", "format": "date-time" },
                        "comment_user": { "type": "string" }
                      }
                    }
                  },
                  "post_likes": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The post was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post_id": { "type": "integer" },
                    "username": { "type": "string" },
                    "post_description": { "type": "string" },
                    "post_created_time": { "type": "string", "format": "date-time" },
                    "post_images": {
                      "type": "array",
                      "items": { "type": "string", "format": "uri" }
                    },
                    "post_comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment_text": { "type": "string" },
                          "comment_time": { "type": "string", "format": "date-time" },
                          "comment_user": { "type": "string" }
                        }
                      }
                    },
                    "post_likes": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to create the post."
          }
        }
      }
    },
    "/getposts": {
      "get": {
        "summary": "Get all posts",
        "operationId": "get_all_posts",
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "post_id": { "type": "integer" },
                          "username": { "type": "string" },
                          "post_description": { "type": "string" },
                          "post_created_time": { "type": "string", "format": "date-time" },
                          "post_images": {
                            "type": "array",
                            "items": { "type": "string", "format": "uri" }
                          },
                          "post_comments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "comment_text": { "type": "string" },
                                "comment_time": { "type": "string", "format": "date-time" },
                                "comment_user": { "type": "string" }
                              }
                            }
                          },
                          "post_likes": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        }

                     
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/getpost/{post_id}": {
      "get": {
        "summary": "Get post by ID",
        "operationId": "get_post_by_id",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post_id": { "type": "integer" },
                    "username": { "type": "string" },
                    "post_description": { "type": "string" },
                    "post_created_time": { "type": "string", "format": "date-time" },
                    "post_images": {
                      "type": "array",
                      "items": { "type": "string", "format": "uri" }
                    },
                    "post_comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment_text": { "type": "string" },
                          "comment_time": { "type": "string", "format": "date-time" },
                          "comment_user": { "type": "string" }
                        }
                      }
                    },
                    "post_likes": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/getpostsbyuser/{username}": {
      "get": {
        "summary": "Get posts by user",
        "operationId": "get_posts_by_user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "post_id": { "type": "integer" },
                          "username": { "type": "string" },
                          "post_description": { "type": "string" },
                          "post_created_time": { "type": "string", "format": "date-time" },
                          "post_images": {
                            "type": "array",
                            "items": { "type": "string", "format": "uri" }
                          },
                          "post_comments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "comment_text": { "type": "string" },
                                "comment_time": { "type": "string", "format": "date-time" },
                                "comment_user": { "type": "string" }
                              }
                            }
                          },
                          "post_likes": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        } }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
     "/logout": {
        "get": {
           "summary": "Logout",
           "description": "This endpoint logs out the currently logged-in user.",
           "operationId": "routes.logout",
           "security": [
            {
               "BearerAuth": []
            }
         ],
           "responses": {
              "302": {
                 "description": "The user was logged out successfully.",
                 "headers": {
                    "Location": {
                       "description": "Redirect URL after successful logout.",
                       "schema": {
                          "type": "string"
                       }
                    }
                 }
              },
              "401": {
                 "description": "The user is not authenticated."
              },
              "405": {
                 "description": "The user is not authenticated kindly login."
              }
           }
        }
     }
  }
}